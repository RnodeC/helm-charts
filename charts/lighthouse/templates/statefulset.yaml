{{- $bn := .Values.lighthouse.beacon.enabled -}}
{{- $vc := .Values.lighthouse.validator.enabled -}}
{{- $network := .Values.lighthouse.network -}}
{{- $metrics := default false .Values.lighthouse.metrics.enabled -}}
{{- $monitoringEndpoint := default '' .Values.monitoringEndpoint -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lighthouse
  labels:
{{ include "lighthouse.labels" . | indent 4 }}
spec:
  replicas: 1
  serviceName: lighthouse
  selector:
    matchLabels:
{{ include "lighthouse.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "lighthouse.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ include "lighthouse.serviceAccountName" . }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: geth
              namespaces:
              - geth
              topologyKey: kubernetes.io/hostname
      containers:
      {{- if $bn }}
      - name: lighthouse-bn
        image: {{ include "lighthouse.image" . }}
        imagePullPolicy: IfNotPresent
        command:
        - lighthouse
        - beacon
        args:
        {{ with .Values.lighthouse.beacon -}}
        - --network={{ $network }}
        - --datadir=/chaindata
        - --discovery-port={{ .p2p.udpPort }}
        - --port={{ .p2p.tcpPort }}
        {{- if .http.enabled }}
        - --http
        - --http-address=0.0.0.0
        - --http-port={{ .http.port }}
        {{- end }}
        {{- if $metrics }}
        - --metrics
        - --metrics-address=0.0.0.0
        - --metrics-allow-origin=*
        - --metrics-port={{ .metricsPort }}
        {{- end }}
        - --prune-payloads={{ .prunePayloads }}
        {{- if .disableUpnp }}
        - --disable-upnp
        {{- end }}
        {{- if .validatorMonitorAuto }}
        - --validator-monitor-auto
        {{- end }}
        {{- with .executionEndpoint }}
        {{- if and .host .port }}
        - --execution-endpoint=http://{{- .host -}}:{{- .port }}
        - --execution-jwt=/etc/eth2/jwt
        {{- end }}
        {{- end }}
        {{- if .checkpointSync.enabled }}
        - --checkpoint-sync-url={{- required "lighthouse.beacon.checkpointSync.url is required when checkpointSync is enabled" .checkpointSync.url -}}
        {{- end }}
        {{- if .purgeDb }}
        - --purge-db
        {{- end }}
        {{- with .enr }}
        {{- if and .host .port }}
        - --disable-enr-auto-update
        - --enr-address={{- .host }}
        - --enr-udp-port={{- .port }}
        - --enr-tcp-port={{- .port }}
        {{- end }}
        {{- end }}
        {{- if .genesisBackfill }}
        - --genesis-backfill
        {{- end }}
        {{- if $monitoringEndpoint }}
        - --monitoring-endpoint={{- $monitoringEndpoint }}
        {{- end }}
        ports:
          {{ if .http.enabled -}}
          - name: http-bn
            containerPort: {{ .http.port }}
            protocol: TCP
          {{- end }}
          {{- if $metrics }}
          - name: metrics-bn
            containerPort: {{ .metricsPort }}
            protocol: TCP
          {{- end }}
          - name: tcppeer
            containerPort: {{ .p2p.tcpPort }}
            protocol: TCP
            {{- if .p2p.hostPorts }}
            hostPort: {{ .p2p.tcpPort }}
            {{- end }}
          - name: udppeer
            containerPort: {{ .p2p.udpPort }}
            protocol: UDP
            {{- if .p2p.hostPorts }}
            hostPort: {{ .p2p.udpPort }}
            {{- end }}
        {{- end }}
        livenessProbe:
          periodSeconds: 10
          initialDelaySeconds: 10
          successThreshold: 1
          exec:
            command:
            - cat
            - /chaindata/beacon/network/enr.dat
        readinessProbe:
          periodSeconds: 10
          initialDelaySeconds: 10
          successThreshold: 1
          exec:
            command:
            - cat
            - /chaindata/beacon/network/enr.dat
        startupProbe:
          initialDelaySeconds: 120
          exec:
            command:
            - cat
            - /chaindata/beacon/network/enr.dat
        resources:
          {{- toYaml .Values.lighthouse.beacon.resources | nindent 10 }}
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: chaindata
          mountPath: /chaindata
        - name: jwt
          mountPath: /etc/eth2
      {{- end }}
      {{- if $vc }}
      - name: lighthouse-vc
        image: {{ include "lighthouse.image" . }}
        imagePullPolicy: IfNotPresent
        command:
        - lighthouse
        - vc
        args:
        {{ with .Values.lighthouse.validator -}}
        - --network={{ $network }}
        - --datadir=/chaindata
        {{- if .http.enabled }}
        - --http
        - --http-address=0.0.0.0
        - --http-port={{ .http.port }}
        {{- end }}
        {{- if $metrics }}
        - --metrics
        - --metrics-address=0.0.0.0
        - --metrics-allow-origin=*
        - --metrics-port={{ .metricsPort }}
        {{- end }}
        {{- if .graffiti }}
        - --graffiti={{ .graffiti | quote }}
        {{- end }}
        {{- if .suggestedFeeRecipient }}
        - --suggested-fee-recipient={{ .suggestedFeeRecipient }}
        {{- end }}
        - --beacon-nodes={{ .beaconNodeUrl }}
        - --unencrypted-http-transport
        {{- if $monitoringEndpoint }}
        - --monitoring-endpoint={{- $monitoringEndpoint }}
        {{- end }}
        ports:
          {{ if .http.enabled -}}
          - name: http-vc
            containerPort: {{ .http.port }}
            protocol: TCP
          {{- end }}
          {{- if $metrics }}
          - name: metrics-vc
            containerPort: {{ .metricsPort }}
            protocol: TCP
          {{- end }}
        {{- end }}
        {{- end }}
        livenessProbe:
          periodSeconds: 10
          initialDelaySeconds: 10
          successThreshold: 1
          exec:
            command:
            - cat
            - /chaindata/beacon/network/enr.dat
        readinessProbe:
          periodSeconds: 10
          initialDelaySeconds: 10
          successThreshold: 1
          exec:
            command:
            - cat
            - /chaindata/beacon/network/enr.dat
        startupProbe:
          initialDelaySeconds: 120
          exec:
            command:
            - cat
            - /chaindata/beacon/network/enr.dat
        resources:
          {{- toYaml .Values.lighthouse.validator.resources | nindent 10 }}
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: chaindata
          mountPath: /chaindata
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 300
      {{- if $bn }}
      volumes:
       - name: jwt
         secret:
           secretName: lh-jwt
      {{- end }}
  volumeClaimTemplates:
  - apiVersion: v1
    metadata:
      name: chaindata
      labels:
{{ include "lighthouse.labels" . | indent 8 }}
    spec:
      storageClassName: {{ .Values.storage.storageClassName }}
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.storage.pvcSize }}
