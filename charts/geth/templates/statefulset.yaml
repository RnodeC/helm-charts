---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth
  labels:
{{ include "geth.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: geth
  selector:
    matchLabels:
{{ include "geth.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "geth.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ include "geth.serviceAccountName" . }}
      containers:
      - name: geth
        image: {{ include "geth.image" . }}
        command: 
        - geth
        args:
        {{- with .Values.geth }}
        - --{{ .chain }}
        - --datadir=/chaindata
        - --authrpc.addr=0.0.0.0
        - --authrpc.port=8551
        - --authrpc.vhosts=*
        - --authrpc.jwtsecret=/etc/eth2/jwt
        {{- if .http.enabled }}
        - --http
        - --http.addr=0.0.0.0
        - --http.port=8545
        - --http.vhosts=*
        {{- end }}
        {{- if .ipcDisable }}
        - --ipcdisable
        {{- end }}
        {{- if .metrics.enabled }}
        - --metrics
        - --metrics.addr=0.0.0.0
        - --metrics.port=6060
        {{- end }}
        imagePullPolicy: IfNotPresent
        ports:
          - name: tcppeer
            containerPort: 30303
            protocol: TCP
            {{- if .network.hostPorts }}
            hostPort: 30303
            {{- end }}
          - name: udppeer
            containerPort: 30303
            protocol: UDP
            {{- if .network.hostPorts }}
            hostPort: 30303
            {{- end }}
          - name: rpc
            containerPort: 8551
            protocol: TCP
          {{- if .http.enabled }}
          - name: http
            containerPort: 8545
            protocol: TCP
          {{- end }}
          {{- if .metrics.enabled }}
          - name: metrics
            containerPort: 6060
            protol: TCP
          {{- end }}
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 120
          terminationGracePeriodSeconds: 60
          tcpSocket:
            port: rpc
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          tcpSocket:
            port: rpc
        startupProbe:
          initialDelaySeconds: 120
          tcpSocket:
            port: rpc
        resources:
          {{- toYaml .Values.resources | nindent 10 }} 
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:  
              - ALL
        volumeMounts:
        - name: chaindata
          mountPath: /chaindata
        - name: jwt
          mountPath: /etc/eth2
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      volumes:
       - name: jwt
         secret:
           secretName: geth-jwt
  volumeClaimTemplates:
  - apiVersion: v1
    metadata:
      name: chaindata
      labels:
{{ include "geth.labels" . | indent 8 }}
    spec:
      storageClassName: {{ .Values.storage.storageClassName }}
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.storage.pvcSize }}
